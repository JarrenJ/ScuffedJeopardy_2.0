{"version":3,"sources":["assets/dev/final.jpeg","Components/Custom/CustomComponents.jsx","App.jsx","index.js"],"names":["module","exports","Title","styled","h2","StyledPoints","TeamTitle","h3","StyledCard","button","StyledCategoryCard","GameContainer","div","ColumnContainer","FinalContainer","ScoreBoardContainer","StyledScoreBoardCard","CategoryCard","props","title","ScoreBoardCard","style","textAlign","score","sweetAlert","withReactContent","Swal","App","useState","teamOneScore","setTeamOneScore","teamTwoScore","setTeamTwoScore","teamThreeScore","setTeamThreeScore","teamIDs","usedCards","setUsedCards","updateScore","teamOne","teamTwo","teamThree","points","removeScore","setOfUsedCards","Set","size","onClick","fire","allowOutsideClick","icon","confirmButtonText","then","html","width","height","src","finalPhoto","alt","categories2","map","category","key","id","categories","cards2","card","question","text","double","picture","answer","preConfirm","teamBarth","getPopup","querySelector","checked","teamDavis","teamBranch","result","value","includes","cards","teams","team","idx","name","avatar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86c52b83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/final.1fc2a958.jpeg\";","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: #000;\n  font-weight: 600;\n  font-size: 1.9rem;\n`;\n\nexport const StyledPoints = styled.h2`\n  color: violet;\n  font-weight: 600;\n  font-size: 2em;\n`;\n\nexport const TeamTitle = styled.h3`\n  color: #000;\n  font-weight: 600;\n  width: 100%;\n  padding: 0em 5em 0em 5em;\n`;\n\n// export const Description = styled.p`\n//   color: #000;\n//   font-weight: 300;\n// `;\n\nexport const StyledCard = styled.button`\n  position: relative;\n  min-width: 20vw;\n  min-height: 12vh;\n  cursor: pointer;\n  background-color: #dcbeee;\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nexport const StyledCategoryCard = styled.button`\n  position: relative;\n  min-height: 15vh;\n  min-width: 20vw;\n  background-color: #c293e2;\n`;\n\nexport const GameContainer = styled.div`\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: auto auto auto auto auto;\n    grid-template-rows: auto auto auto auto auto;\n`;\n\nexport const ColumnContainer = styled.div`\n    display: grid;\n    width: auto;\n    grid-template-columns: auto auto auto auto auto;\n`;\n\nexport const FinalContainer = styled.div`\n    display: grid;\n    width: auto;\n    justify-items: center;\n    grid-template-columns: auto;\n`;\n\nexport const ScoreBoardContainer = styled.div`\n    position: absolute;\n    left: 50%;\n    display: grid;\n    grid-template-columns: auto auto auto;\n    justify-items: center;\n    -webkit-transform: translateX(-50%);\n    transform: translateX(-50%);\n    padding: 1em;\n`;\n\nexport const StyledScoreBoardCard = styled.div`\n    padding: 2em;\n    display: grid;\n    grid-template-columns: auto;\n    justify-items: center;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    min-height: 1vh;\n    width: auto;\n`;\n\n// export const TeamAvatar = styled.img`\n//     width: 15em;\n//     height: 10em;\n// `;\n\nconst CategoryCard = props => (\n    <StyledCategoryCard>\n        {/* eslint-disable-next-line react/prop-types */}\n        <Title>{props.title}</Title>\n    </StyledCategoryCard>\n);\n\nexport const ScoreBoardCard = props => (\n        <StyledScoreBoardCard>\n            {/* eslint-disable-next-line react/prop-types */}\n            <TeamTitle\n                style={{ textAlign: 'center' }}\n            >\n                {/* eslint-disable-next-line react/prop-types */}\n                {props.title}\n            </TeamTitle>\n            {/* eslint-disable-next-line react/prop-types */}\n            <StyledPoints>{props.score}</StyledPoints>\n        </StyledScoreBoardCard>\n);\n\nexport { CategoryCard };\n","import React, { useState } from 'react';\nimport {\n    CategoryCard,\n    ColumnContainer,\n    GameContainer, ScoreBoardCard,\n    ScoreBoardContainer, StyledCard, Title, FinalContainer\n} from './Components/Custom/CustomComponents';\n\nimport finalPhoto from './assets/dev/final.jpeg';\n\nimport { cards, categories, teams, cards2, categories2 } from './data.json';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nconst sweetAlert = withReactContent(Swal);\n\n// eslint-disable-next-line max-lines-per-function\nconst App = () => {\n\n    const [teamOneScore, setTeamOneScore] = useState(0);\n    const [teamTwoScore, setTeamTwoScore] = useState(0);\n    const [teamThreeScore, setTeamThreeScore] = useState(0);\n    const teamIDs = [\n        teamOneScore,\n        teamTwoScore,\n        teamThreeScore\n    ];\n\n    const [usedCards, setUsedCards] = useState([]);\n\n    // eslint-disable-next-line max-params\n    const updateScore = (teamOne, teamTwo, teamThree, points) => {\n        // eslint-disable-next-line multiline-ternary,no-ternary\n        const teamOnePoints = teamOne ? (setTeamOneScore(teamOneScore + points)) : null;\n        // eslint-disable-next-line multiline-ternary,no-ternary\n        const teamTwoPoints = teamTwo ? (setTeamTwoScore(teamTwoScore + points)) : null;\n        // eslint-disable-next-line multiline-ternary,no-ternary\n        const teamThreePoints = teamThree ? (setTeamThreeScore(teamThreeScore + points)) : null;\n\n        // eslint-disable-next-line no-sequences\n        return teamOnePoints, teamTwoPoints, teamThreePoints;\n    };\n\n    // eslint-disable-next-line max-params\n    const removeScore = (teamOne, teamTwo, teamThree, points) => {\n        // eslint-disable-next-line multiline-ternary,no-ternary\n        const teamOnePoints = teamOne ? (setTeamOneScore(teamOneScore - points)) : null;\n        // eslint-disable-next-line multiline-ternary,no-ternary\n        const teamTwoPoints = teamTwo ? (setTeamTwoScore(teamTwoScore - points)) : null;\n        // eslint-disable-next-line multiline-ternary,no-ternary\n        const teamThreePoints = teamThree ? (setTeamThreeScore(teamThreeScore - points)) : null;\n\n        // eslint-disable-next-line no-sequences\n        return teamOnePoints, teamTwoPoints, teamThreePoints;\n    };\n\n    // const testArray = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50];\n    // const testArray2 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25];\n    const setOfUsedCards = new Set(usedCards);\n    // const setOfUsedCards = new Set(testArray);\n    // const setOfUsedCards = new Set(testArray2);\n\n    return (\n        <>\n            {/* eslint-disable-next-line no-ternary */}\n            {setOfUsedCards.size === 50\n                // eslint-disable-next-line multiline-ternary\n                ? <FinalContainer>\n                    {/* eslint-disable-next-line max-lines-per-function */}\n                    <StyledCard onClick={() => {\n                        sweetAlert.fire({\n                            allowOutsideClick: false,\n                            // eslint-disable-next-line react/prop-types\n                            title: 'Name from the left to the right the order of family members in the famous Virginia Beach topless photo',\n                            // eslint-disable-next-line sort-keys,multiline-ternary,no-ternary\n                            // eslint-disable-next-line sort-keys\n                            icon: 'question',\n                            // eslint-disable-next-line sort-keys\n                            confirmButtonText: 'See Answer'\n                            // eslint-disable-next-line max-lines-per-function\n                        }).then(() => {\n                            sweetAlert.fire({\n                                allowOutsideClick: false,\n                                icon: 'success',\n                                // eslint-disable-next-line react/prop-types\n                                title: \"Brent, Marc, Geri, G'pa, Tim, Cyrelle\",\n                                html: <img style={{ width: '55em',\n                                    // eslint-disable-next-line sort-keys\n                                    height: '45em' }} src={finalPhoto} alt=\"Picture\"/>,\n                                // eslint-disable-next-line sort-keys\n                                width: 1500,\n                                confirmButtonText: 'Continue',\n                                // eslint-disable-next-line max-lines-per-function\n                            });\n                        });\n                    }}>\n                        {/* eslint-disable-next-line react/prop-types,multiline-ternary,no-ternary */}\n                        <Title>Family Photos</Title>\n                        {/* eslint-disable-next-line max-lines-per-function,react/jsx-key */}\n                    </StyledCard>\n                </FinalContainer> : <> <ColumnContainer>\n                {setOfUsedCards.size >= 25 ? categories2.map(category => <CategoryCard key={category.id} title={category.category}/>) : categories.map(category => <CategoryCard key={category.id} title={category.category}/>)}\n            </ColumnContainer>\n                <GameContainer>\n                    {/* eslint-disable-next-line react/jsx-key,max-lines-per-function */}\n                    {setOfUsedCards.size >= 25 ? cards2.map(card => <StyledCard onClick={() => {\n                        sweetAlert.fire({\n                            allowOutsideClick: false,\n                            // eslint-disable-next-line react/prop-types\n                            title: card.question,\n                            // eslint-disable-next-line sort-keys\n                            text: card.double ? 'DOUBLE POINTS!' : '',\n                            // eslint-disable-next-line sort-keys,multiline-ternary,no-ternary\n                            html: card.picture ? (<img style={{ width: '15em',\n                                // eslint-disable-next-line sort-keys\n                                height: '15em;' }} src={card.picture} alt=\"Picture\"/>) : '',\n                            // eslint-disable-next-line sort-keys\n                            icon: 'question',\n                            // eslint-disable-next-line sort-keys\n                            confirmButtonText: 'See Answer'\n                            // eslint-disable-next-line max-lines-per-function\n                        }).then(() => {\n                            sweetAlert.fire({\n                                allowOutsideClick: false,\n                                icon: 'success',\n                                // eslint-disable-next-line react/prop-types\n                                title: card.answer,\n                                // eslint-disable-next-line sort-keys\n                                confirmButtonText: 'Continue',\n                                // eslint-disable-next-line max-lines-per-function\n                            }).then(() => {\n                                sweetAlert.fire({\n                                    allowOutsideClick: false,\n                                    title: 'Who got it right?',\n                                    // eslint-disable-next-line sort-keys\n                                    html: '<h3>The Barth\\'s <input type=\"checkbox\" id=\"Barth\"  /></h3>' +\n                                        '<h3>The Davis\\' <input type=\"checkbox\" id=\"Davis\"  /></h3>' +\n                                        '<h3>The Branch\\'s <input type=\"checkbox\" id=\"Branch\"  /></h3>',\n                                    // eslint-disable-next-line sort-keys\n                                    confirmButtonText: 'Confirm',\n                                    preConfirm: () => {\n                                        const teamBarth = sweetAlert.getPopup().querySelector('#Barth').checked;\n                                        const teamDavis = sweetAlert.getPopup().querySelector('#Davis').checked;\n                                        const teamBranch = sweetAlert.getPopup().querySelector('#Branch').checked;\n                                        // console.log(`Barth = ${teamBarth} Davis = ${teamDavis} Branch = ${teamBranch}`);\n\n                                        return { teamBarth,\n                                            teamDavis,\n                                            // eslint-disable-next-line sort-keys\n                                            teamBranch };\n                                    }\n                                    // eslint-disable-next-line multiline-ternary,no-ternary\n                                }).then(result => {\n                                    updateScore(result.value.teamBarth, result.value.teamDavis, result.value.teamBranch, card.double ? card.points*2 : card.points);\n                                })\n                                    .then(() => {\n                                        sweetAlert.fire({\n                                            allowOutsideClick: false,\n                                            title: 'Who got it wrong?',\n                                            // eslint-disable-next-line sort-keys\n                                            html: '<h3>The Barth\\'s <input type=\"checkbox\" id=\"Barth\"  /></h3>' +\n                                                '<h3>The Davis\\' <input type=\"checkbox\" id=\"Davis\"  /></h3>' +\n                                                '<h3>The Branch\\'s <input type=\"checkbox\" id=\"Branch\"  /></h3>',\n                                            // eslint-disable-next-line sort-keys\n                                            confirmButtonText: 'Confirm',\n                                            preConfirm: () => {\n                                                const teamBarth = sweetAlert.getPopup().querySelector('#Barth').checked;\n                                                const teamDavis = sweetAlert.getPopup().querySelector('#Davis').checked;\n                                                const teamBranch = sweetAlert.getPopup().querySelector('#Branch').checked;\n                                                // console.log(`Barth = ${teamBarth} Davis = ${teamDavis} Branch = ${teamBranch}`);\n\n                                                return { teamBarth,\n                                                    teamDavis,\n                                                    // eslint-disable-next-line sort-keys\n                                                    teamBranch };\n                                            }\n                                            // eslint-disable-next-line multiline-ternary,no-ternary\n                                        }).then(result => {\n                                            removeScore(result.value.teamBarth, result.value.teamDavis, result.value.teamBranch, card.points);\n                                        })\n                                            .then(() => setUsedCards([...usedCards, card.id]));\n                                    });\n                            });\n                        });\n                    }}>\n                        {/* eslint-disable-next-line react/prop-types,multiline-ternary,no-ternary */}\n                        <Title>{usedCards.includes(card.id) ? '\\u2717' : card.points}</Title>\n                        {/* eslint-disable-next-line max-lines-per-function,react/jsx-key */}\n                    </StyledCard>) : cards.map(card => <StyledCard onClick={() => {\n                        sweetAlert.fire({\n                            allowOutsideClick: false,\n                            // eslint-disable-next-line react/prop-types\n                            title: card.question,\n                            // eslint-disable-next-line sort-keys,multiline-ternary,no-ternary\n                            html: card.picture ? (<img style={{ width: '15em',\n                                // eslint-disable-next-line sort-keys\n                                height: '15em;' }} src={card.picture} alt=\"Picture\"/>) : '',\n                            // eslint-disable-next-line sort-keys\n                            icon: 'question',\n                            // eslint-disable-next-line sort-keys\n                            confirmButtonText: 'See Answer'\n                            // eslint-disable-next-line max-lines-per-function\n                        }).then(() => {\n                            sweetAlert.fire({\n                                allowOutsideClick: false,\n                                icon: 'success',\n                                // eslint-disable-next-line react/prop-types\n                                title: card.answer,\n                                // eslint-disable-next-line sort-keys\n                                confirmButtonText: 'Continue',\n                                // eslint-disable-next-line max-lines-per-function\n                            }).then(() => {\n                                sweetAlert.fire({\n                                    allowOutsideClick: false,\n                                    title: 'Who got it right?',\n                                    // eslint-disable-next-line sort-keys\n                                    html: '<h3>The Barth\\'s <input type=\"checkbox\" id=\"Barth\"  /></h3>' +\n                                        '<h3>The Davis\\' <input type=\"checkbox\" id=\"Davis\"  /></h3>' +\n                                        '<h3>The Branch\\'s <input type=\"checkbox\" id=\"Branch\"  /></h3>',\n                                    // eslint-disable-next-line sort-keys\n                                    confirmButtonText: 'Confirm',\n                                    preConfirm: () => {\n                                        const teamBarth = sweetAlert.getPopup().querySelector('#Barth').checked;\n                                        const teamDavis = sweetAlert.getPopup().querySelector('#Davis').checked;\n                                        const teamBranch = sweetAlert.getPopup().querySelector('#Branch').checked;\n                                        // console.log(`Barth = ${teamBarth} Davis = ${teamDavis} Branch = ${teamBranch}`);\n\n                                        return { teamBarth,\n                                            teamDavis,\n                                            // eslint-disable-next-line sort-keys\n                                            teamBranch };\n                                    }\n                                    // eslint-disable-next-line multiline-ternary,no-ternary\n                                }).then(result => {\n                                    updateScore(result.value.teamBarth, result.value.teamDavis, result.value.teamBranch, card.points);\n                                })\n                                    .then(() => {\n                                        sweetAlert.fire({\n                                            allowOutsideClick: false,\n                                            title: 'Who got it wrong?',\n                                            // eslint-disable-next-line sort-keys\n                                            html: '<h3>The Barth\\'s <input type=\"checkbox\" id=\"Barth\"  /></h3>' +\n                                                '<h3>The Davis\\' <input type=\"checkbox\" id=\"Davis\"  /></h3>' +\n                                                '<h3>The Branch\\'s <input type=\"checkbox\" id=\"Branch\"  /></h3>',\n                                            // eslint-disable-next-line sort-keys\n                                            confirmButtonText: 'Confirm',\n                                            preConfirm: () => {\n                                                const teamBarth = sweetAlert.getPopup().querySelector('#Barth').checked;\n                                                const teamDavis = sweetAlert.getPopup().querySelector('#Davis').checked;\n                                                const teamBranch = sweetAlert.getPopup().querySelector('#Branch').checked;\n                                                // console.log(`Barth = ${teamBarth} Davis = ${teamDavis} Branch = ${teamBranch}`);\n\n                                                return { teamBarth,\n                                                    teamDavis,\n                                                    // eslint-disable-next-line sort-keys\n                                                    teamBranch };\n                                            }\n                                            // eslint-disable-next-line multiline-ternary,no-ternary\n                                        }).then(result => {\n                                            removeScore(result.value.teamBarth, result.value.teamDavis, result.value.teamBranch, card.points);\n                                        })\n                                            .then(() => setUsedCards([...usedCards, card.id]));\n                                    });\n                            });\n                        });\n                    }}>\n                        {/* eslint-disable-next-line react/prop-types,multiline-ternary,no-ternary */}\n                        <Title>{usedCards.includes(card.id) ? '\\u2717' : card.points}</Title>\n                    </StyledCard>)}\n                </GameContainer> </>}\n            <ScoreBoardContainer>\n                {teams.map(team => <ScoreBoardCard key={team.id} idx={team.id} title={team.name} score={teamIDs[team.id - 1]} avatar={'/Users/jarrenj/scuffedjeopardy/src/assets/dev/JarrenSeniorPicFixed.jpg'}/>)}\n            </ScoreBoardContainer>\n    </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}